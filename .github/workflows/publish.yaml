name: Publish to Package Registry

on:
  workflow_dispatch:
    inputs:
      publish_to_primary:
        description: 'Publish to Primary Registry'
        type: boolean
        required: false
        default: false
env:
  PYTHONUNBUFFERED: True
  PRE_COMMIT_HOME: ${{ github.workspace }}/.precommit_cache

permissions:
  id-token: write # needed to assume OIDC roles (e.g. for downloading from CodeArtifact)

jobs:
  get-values:
    name: Get Values
    runs-on: ubuntu-24.04
    outputs:
      package-version: ${{ steps.extract-package-version.outputs.package_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: 3.12.7
      - name: Extract package version
        id: extract-package-version
        run: |
          VERSION=$(python3 ./.github/workflows/git_tag.py)
          echo "Extracted version: $VERSION"
          echo "package_version=$VERSION" >> $GITHUB_OUTPUT

  lint:
    name: Pre-commit
    uses: ./.github/workflows/pre-commit.yaml
    permissions:
      contents: write # needed for mutex
    with:
      python-version: 3.12.7

  test:
    needs: [ lint ]
    strategy:
      matrix:
        os:
          - "ubuntu-24.04"
          - windows-2025
        python-version:

          - 3.12.7

          - 3.13.2

        include:
          - os: "ubuntu-24.04"
            python-version: "3.12.7"
            JOB_MATCHING_DEV_ENV: true

    runs-on: ${{ matrix.os }}
    env:
      UV_PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Install python tooling
        uses: ./.github/actions/install_deps
        with:
          python-version: ${{ matrix.python-version }}

      - name: Unit test
        run: uv run pytest --durations=5

  build:
    needs: [ test ]
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Install python tooling
        uses: ./.github/actions/install_deps
        with:
          python-version: 3.12.7


      - name: Build package
        run: |

          uv build --no-sources

      - name: Upload build package
        uses: actions/upload-artifact@v4.6.2
        with:
          name: python-package-distributions
          path: dist/
          if-no-files-found: error


  publish-to-staging:
    name: Publish Python distribution to Staging Package Registry
    needs: [ build ]
    runs-on: ubuntu-24.04
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyalab
    permissions:
      attestations: write
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4.3.0
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          attestations: false
          repository-url: https://test.pypi.org/legacy/



  install-from-staging:
    name: Install package from staging registry
    needs: [ publish-to-staging, get-values ]
    strategy:
      matrix:
        os:
          - "ubuntu-24.04"
          - windows-2025
        python-version:

          - 3.12.7

          - 3.13.2

        include:
          - os: "ubuntu-24.04"
            python-version: "3.12.7"
            JOB_MATCHING_DEV_ENV: true

    runs-on: ${{ matrix.os }}
    env:
      UV_PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Sleep to allow PyPI Index to update before proceeding to the next step
        uses: juliangruber/sleep-action@v2.0.3
        with:
          time: 60s
      - name: Install from staging registry
        run: pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://www.pypi.org/simple pyalab==${{ needs.get-values.outputs.package-version }}
      - name: Display dependencies
        run: pip list
      - name: Confirm library can be imported successfully
        run: python -c "import pyalab"

  create-tag:
    name: Create the git tag
    if: ${{ github.event.inputs.publish_to_primary }}
    needs: [ install-from-staging ]
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: 3.12.7
      - name: Confirm tag not already present
        run: python3 ./.github/workflows/git_tag.py --confirm-tag-not-present
      - name: Create tag
        run: python3 ./.github/workflows/git_tag.py --push-tag-to-remote

  publish-to-primary:
    name: Publish Python distribution to Primary Package Registry
    if: ${{ github.event.inputs.publish_to_primary }}
    needs: [ create-tag ]
    runs-on: ubuntu-24.04
    environment:
      name: pypi
      url: https://pypi.org/p/pyalab
    permissions:
      attestations: write
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4.3.0
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          attestations: false

  install-from-primary:
    name: Install package from primary registry
    if: ${{ github.event.inputs.publish_to_primary }}
    needs: [ publish-to-primary, get-values ]
    strategy:
      matrix:
        os:
          - "ubuntu-24.04"
          - windows-2025
        python-version:

          - 3.12.7

          - 3.13.2

        include:
          - os: "ubuntu-24.04"
            python-version: "3.12.7"
            JOB_MATCHING_DEV_ENV: true

    runs-on: ${{ matrix.os }}
    env:
      UV_PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Sleep to allow PyPI Index to update before proceeding to the next step
        uses: juliangruber/sleep-action@v2.0.3
        with:
          time: 60s
      - name: Install from primary registry
        run: pip install pyalab==${{ needs.get-values.outputs.package-version }}
      - name: Display dependencies
        run: pip list
      - name: Confirm library can be imported successfully
        run: python -c "import pyalab"
