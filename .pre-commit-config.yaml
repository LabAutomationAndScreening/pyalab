minimum_pre_commit_version: 4.0.1
# run `pre-commit autoupdate --freeze` to update all hooks
default_install_hook_types: [pre-commit, post-checkout]
repos:

# Git-related
-   repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 38980559e3a605691d6579f96222c30778e5a69e  # frozen: 3.0.0
    hooks:
    -   id: git-dirty

# package management
- repo: local
  hooks:
    - id: uv-check
      name: check pyproject.toml for valid Poetry config
      entry: bash -c 'uv lock --check'
      language: system
      pass_filenames: false
      verbose: true
      files: '^pyproject.toml$|^uv.lock$'

    - id: sync-dependencies-on-commit
      name: ensure python dependencies are up to date during commits
      stages: [pre-commit]
       # When the install does change things, it exits 0, so needed to check for the phrase 'operations' in stdout in order to cause things pre-commit command to fail
      entry: python -c "import subprocess,sys; results=subprocess.run(['uv', 'sync', '--frozen'],timeout=360,capture_output=True); print ('stdout- ' + results.stdout.decode('utf-8', 'strict')); print ('stderr- ' + results.stderr.decode('utf-8', 'strict')); sys.exit(int(results.returncode or int('Installed' in results.stdout.decode('utf-8', 'strict'))));"
      # don't pass filenames else the command line sees them twice
      pass_filenames: false
      language: system
      files: 'uv.lock$'
      verbose: true

    - id: sync-dependencies-post-checkout
      name: ensure python dependencies are up to date during checkouts
      stages: [post-checkout]
      entry: bash -c 'uv sync --frozen'
      pass_filenames: false
      language: system
      always_run: true
      verbose: true


# Reformatting (should generally come before any file format or other checks, because reformatting can change things)
-   repo: https://github.com/crate-ci/typos
    rev: 0fa392de4a080a8f22469c05415090ee3addf4fb  # frozen: v1.28.4
    hooks:
      - id: typos
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b  # frozen: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
        # the XML formatter hook doesn't leave a blank line at the end, so excluding XML files from this hook to avoid conflicts
        exclude: | # the extra trailing newline in the pull request template makes it easier to click there in the github console. The CLI that programmatically generates devcontainer-lock.json always ends the file incompatible with this hook.
            (?x)^(
                .github/pull_request_template.md|
                template/.github/pull_request_template.md|
                template/.copier-answers.yml.jinja-base|
                template/template/.copier-answers.yml.jinja|
                template/.copier-answers.yml.jinja|
                .devcontainer/devcontainer-lock.json|
                .copier-answers.yml|
                .*\.xml|
            )$
      - id: pretty-format-json
        exclude: |
            (?x)^(
                .devcontainer/devcontainer.json|
                .devcontainer/devcontainer-lock.json|
                .*devcontainer.json|
            )$
        args: [--autofix, --no-sort-keys]

-   repo: https://github.com/myint/docformatter
    # black seems to be working on formatting docstrings, but use this for now
    rev: eb1df347edd128b30cd3368dddc3aa65edcfac38  # tip of main that is compatible with pre-commit v4
    hooks:
      - id: docformatter
        exclude: (tests*)|(exceptions\.py)|(warnings\.py)
        args:
        - --in-place
        - --wrap-summaries=150
        - --wrap-descriptions=150

-   repo: https://github.com/pamoller/xmlformatter
    rev: 47ae0fb9cf2a515f8a2666050fac66fd719ae530  # frozen: v0.2.8
    hooks:
      - id: xml-formatter


# Invalid File Checks
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b  # frozen: v5.0.0
    hooks:
    -   id: check-added-large-files
        args: ['--maxkb=123']
        exclude: (uv.lock)
    -   id: check-json
        exclude: '.*devcontainer.json' # there's comments in this file
    -   id: check-yaml
        exclude: .copier-answers.yml # This is an autogenerated YAML file by Copier that throws 'found unhashable key' errors
    -   id: check-xml
    -   id: check-merge-conflict
    -   id: check-case-conflict

-   repo: https://github.com/maresb/check-json5
    rev: 893a2b5a0a27c3540bd8fcafe2968ccc05237179 # 1.0
    hooks:
    -   id: check-json5
        files: '.*devcontainer.json' # there's comments in this file

-   repo: local
    hooks:
    -   id: forbidden-files
        name: forbidden files
        entry: found copier update rejection files; review them and remove them
        language: fail
        files: "\\.rej$"

# Safety/Security Issues
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b  # frozen: v5.0.0
    hooks:
    -   id: detect-private-key

# Linting

-   repo: https://github.com/Lucas-C/pre-commit-hooks-markup
    rev: 501f3d60cee13c712492103343bc23efdc7b3d1f #v1.0.1
    hooks:
    -   id: rst-linter

-   repo: https://github.com/astral-sh/ruff-pre-commit
    rev: fc6ef5d0dd21a2a98a7fc6956e4f16166cb6562a  # frozen: v0.8.3
    hooks:
    -   id: ruff
        name: ruff-src
        args: [ --fix, --config=./ruff.toml ]
        files: src/.+\.py$
    -   id: ruff
        name: ruff-tests
        args: [ --fix, --config=./ruff-test.toml ]
        files: tests?/.+\.py$
    -   id: ruff-format

-   repo: https://github.com/pylint-dev/pylint
    rev: a5a1bc3a9602d08f15ac90ad12f5b25bde375613  # frozen: v3.3.2
    hooks:
    -   id: pylint
        name: pylint
        args:
        - --rcfile=./pylintrc.toml
        verbose: true

-   repo: local
    hooks:
    -   id: pyright
        name: pyright
        entry: bash -c "uv run pyright"
        files: '.+\.py$'
        # don't pass filenames else the command line sees them twice
        pass_filenames: false
        language: system
        types: [python]
        # use require_serial so that script is only called once per commit
        require_serial: true
        # print the number of files as a sanity-check
        verbose: true
